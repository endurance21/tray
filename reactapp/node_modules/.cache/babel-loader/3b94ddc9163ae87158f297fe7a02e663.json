{"ast":null,"code":"var Crypto = require('crypto');\n\nvar Events = require('events');\n\nvar Net = require('net');\n\nvar tls = require('tls');\n\nvar ConnectionConfig = require('./ConnectionConfig');\n\nvar Protocol = require('./protocol/Protocol');\n\nvar SqlString = require('./protocol/SqlString');\n\nvar Query = require('./protocol/sequences/Query');\n\nvar Util = require('util');\n\nmodule.exports = Connection;\nUtil.inherits(Connection, Events.EventEmitter);\n\nfunction Connection(options) {\n  Events.EventEmitter.call(this);\n  this.config = options.config;\n  this._socket = options.socket;\n  this._protocol = new Protocol({\n    config: this.config,\n    connection: this\n  });\n  this._connectCalled = false;\n  this.state = 'disconnected';\n  this.threadId = null;\n}\n\nConnection.createQuery = function createQuery(sql, values, callback) {\n  if (sql instanceof Query) {\n    return sql;\n  }\n\n  var cb = wrapCallbackInDomain(null, callback);\n  var options = {};\n\n  if (typeof sql === 'function') {\n    cb = wrapCallbackInDomain(null, sql);\n    return new Query(options, cb);\n  }\n\n  if (typeof sql === 'object') {\n    for (var prop in sql) {\n      options[prop] = sql[prop];\n    }\n\n    if (typeof values === 'function') {\n      cb = wrapCallbackInDomain(null, values);\n    } else if (values !== undefined) {\n      options.values = values;\n    }\n\n    return new Query(options, cb);\n  }\n\n  options.sql = sql;\n  options.values = values;\n\n  if (typeof values === 'function') {\n    cb = wrapCallbackInDomain(null, values);\n    options.values = undefined;\n  }\n\n  if (cb === undefined && callback !== undefined) {\n    throw new TypeError('argument callback must be a function when provided');\n  }\n\n  return new Query(options, cb);\n};\n\nConnection.prototype.connect = function connect(options, callback) {\n  if (!callback && typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  if (!this._connectCalled) {\n    this._connectCalled = true; // Connect either via a UNIX domain socket or a TCP socket.\n\n    this._socket = this.config.socketPath ? Net.createConnection(this.config.socketPath) : Net.createConnection(this.config.port, this.config.host); // Connect socket to connection domain\n\n    if (Events.usingDomains) {\n      this._socket.domain = this.domain;\n    }\n\n    var connection = this;\n\n    this._protocol.on('data', function (data) {\n      connection._socket.write(data);\n    });\n\n    this._socket.on('data', wrapToDomain(connection, function (data) {\n      connection._protocol.write(data);\n    }));\n\n    this._protocol.on('end', function () {\n      connection._socket.end();\n    });\n\n    this._socket.on('end', wrapToDomain(connection, function () {\n      connection._protocol.end();\n    }));\n\n    this._socket.on('error', this._handleNetworkError.bind(this));\n\n    this._socket.on('connect', this._handleProtocolConnect.bind(this));\n\n    this._protocol.on('handshake', this._handleProtocolHandshake.bind(this));\n\n    this._protocol.on('initialize', this._handleProtocolInitialize.bind(this));\n\n    this._protocol.on('unhandledError', this._handleProtocolError.bind(this));\n\n    this._protocol.on('drain', this._handleProtocolDrain.bind(this));\n\n    this._protocol.on('end', this._handleProtocolEnd.bind(this));\n\n    this._protocol.on('enqueue', this._handleProtocolEnqueue.bind(this));\n\n    if (this.config.connectTimeout) {\n      var handleConnectTimeout = this._handleConnectTimeout.bind(this);\n\n      this._socket.setTimeout(this.config.connectTimeout, handleConnectTimeout);\n\n      this._socket.once('connect', function () {\n        this.setTimeout(0, handleConnectTimeout);\n      });\n    }\n  }\n\n  this._protocol.handshake(options, wrapCallbackInDomain(this, callback));\n};\n\nConnection.prototype.changeUser = function changeUser(options, callback) {\n  if (!callback && typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  this._implyConnect();\n\n  var charsetNumber = options.charset ? ConnectionConfig.getCharsetNumber(options.charset) : this.config.charsetNumber;\n  return this._protocol.changeUser({\n    user: options.user || this.config.user,\n    password: options.password || this.config.password,\n    database: options.database || this.config.database,\n    timeout: options.timeout,\n    charsetNumber: charsetNumber,\n    currentConfig: this.config\n  }, wrapCallbackInDomain(this, callback));\n};\n\nConnection.prototype.beginTransaction = function beginTransaction(options, callback) {\n  if (!callback && typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  options = options || {};\n  options.sql = 'START TRANSACTION';\n  options.values = null;\n  return this.query(options, callback);\n};\n\nConnection.prototype.commit = function commit(options, callback) {\n  if (!callback && typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  options = options || {};\n  options.sql = 'COMMIT';\n  options.values = null;\n  return this.query(options, callback);\n};\n\nConnection.prototype.rollback = function rollback(options, callback) {\n  if (!callback && typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  options = options || {};\n  options.sql = 'ROLLBACK';\n  options.values = null;\n  return this.query(options, callback);\n};\n\nConnection.prototype.query = function query(sql, values, cb) {\n  var query = Connection.createQuery(sql, values, cb);\n  query._connection = this;\n\n  if (!(typeof sql === 'object' && 'typeCast' in sql)) {\n    query.typeCast = this.config.typeCast;\n  }\n\n  if (query.sql) {\n    query.sql = this.format(query.sql, query.values);\n  }\n\n  if (query._callback) {\n    query._callback = wrapCallbackInDomain(this, query._callback);\n  }\n\n  this._implyConnect();\n\n  return this._protocol._enqueue(query);\n};\n\nConnection.prototype.ping = function ping(options, callback) {\n  if (!callback && typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  this._implyConnect();\n\n  this._protocol.ping(options, wrapCallbackInDomain(this, callback));\n};\n\nConnection.prototype.statistics = function statistics(options, callback) {\n  if (!callback && typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  this._implyConnect();\n\n  this._protocol.stats(options, wrapCallbackInDomain(this, callback));\n};\n\nConnection.prototype.end = function end(options, callback) {\n  var cb = callback;\n  var opts = options;\n\n  if (!callback && typeof options === 'function') {\n    cb = options;\n    opts = null;\n  } // create custom options reference\n\n\n  opts = Object.create(opts || null);\n\n  if (opts.timeout === undefined) {\n    // default timeout of 30 seconds\n    opts.timeout = 30000;\n  }\n\n  this._implyConnect();\n\n  this._protocol.quit(opts, wrapCallbackInDomain(this, cb));\n};\n\nConnection.prototype.destroy = function () {\n  this.state = 'disconnected';\n\n  this._implyConnect();\n\n  this._socket.destroy();\n\n  this._protocol.destroy();\n};\n\nConnection.prototype.pause = function () {\n  this._socket.pause();\n\n  this._protocol.pause();\n};\n\nConnection.prototype.resume = function () {\n  this._socket.resume();\n\n  this._protocol.resume();\n};\n\nConnection.prototype.escape = function (value) {\n  return SqlString.escape(value, false, this.config.timezone);\n};\n\nConnection.prototype.escapeId = function escapeId(value) {\n  return SqlString.escapeId(value, false);\n};\n\nConnection.prototype.format = function (sql, values) {\n  if (typeof this.config.queryFormat === 'function') {\n    return this.config.queryFormat.call(this, sql, values, this.config.timezone);\n  }\n\n  return SqlString.format(sql, values, this.config.stringifyObjects, this.config.timezone);\n};\n\nif (tls.TLSSocket) {\n  // 0.11+ environment\n  Connection.prototype._startTLS = function _startTLS(onSecure) {\n    var connection = this;\n    createSecureContext(this.config, function (err, secureContext) {\n      if (err) {\n        onSecure(err);\n        return;\n      } // \"unpipe\"\n\n\n      connection._socket.removeAllListeners('data');\n\n      connection._protocol.removeAllListeners('data'); // socket <-> encrypted\n\n\n      var rejectUnauthorized = connection.config.ssl.rejectUnauthorized;\n      var secureEstablished = false;\n      var secureSocket = new tls.TLSSocket(connection._socket, {\n        rejectUnauthorized: rejectUnauthorized,\n        requestCert: true,\n        secureContext: secureContext,\n        isServer: false\n      }); // error handler for secure socket\n\n      secureSocket.on('_tlsError', function (err) {\n        if (secureEstablished) {\n          connection._handleNetworkError(err);\n        } else {\n          onSecure(err);\n        }\n      }); // cleartext <-> protocol\n\n      secureSocket.pipe(connection._protocol);\n\n      connection._protocol.on('data', function (data) {\n        secureSocket.write(data);\n      });\n\n      secureSocket.on('secure', function () {\n        secureEstablished = true;\n        onSecure(rejectUnauthorized ? this.ssl.verifyError() : null);\n      }); // start TLS communications\n\n      secureSocket._start();\n    });\n  };\n} else {\n  // pre-0.11 environment\n  Connection.prototype._startTLS = function _startTLS(onSecure) {\n    // before TLS:\n    //  _socket <-> _protocol\n    // after:\n    //  _socket <-> securePair.encrypted <-> securePair.cleartext <-> _protocol\n    var connection = this;\n    var credentials = Crypto.createCredentials({\n      ca: this.config.ssl.ca,\n      cert: this.config.ssl.cert,\n      ciphers: this.config.ssl.ciphers,\n      key: this.config.ssl.key,\n      passphrase: this.config.ssl.passphrase\n    });\n    var rejectUnauthorized = this.config.ssl.rejectUnauthorized;\n    var secureEstablished = false;\n    var securePair = tls.createSecurePair(credentials, false, true, rejectUnauthorized); // error handler for secure pair\n\n    securePair.on('error', function (err) {\n      if (secureEstablished) {\n        connection._handleNetworkError(err);\n      } else {\n        onSecure(err);\n      }\n    }); // \"unpipe\"\n\n    this._socket.removeAllListeners('data');\n\n    this._protocol.removeAllListeners('data'); // socket <-> encrypted\n\n\n    securePair.encrypted.pipe(this._socket);\n\n    this._socket.on('data', function (data) {\n      securePair.encrypted.write(data);\n    }); // cleartext <-> protocol\n\n\n    securePair.cleartext.pipe(this._protocol);\n\n    this._protocol.on('data', function (data) {\n      securePair.cleartext.write(data);\n    }); // secure established\n\n\n    securePair.on('secure', function () {\n      secureEstablished = true;\n\n      if (!rejectUnauthorized) {\n        onSecure();\n        return;\n      }\n\n      var verifyError = this.ssl.verifyError();\n      var err = verifyError; // node.js 0.6 support\n\n      if (typeof err === 'string') {\n        err = new Error(verifyError);\n        err.code = verifyError;\n      }\n\n      onSecure(err);\n    }); // node.js 0.8 bug\n\n    securePair._cycle = securePair.cycle;\n\n    securePair.cycle = function cycle() {\n      if (this.ssl && this.ssl.error) {\n        this.error();\n      }\n\n      return this._cycle.apply(this, arguments);\n    };\n  };\n}\n\nConnection.prototype._handleConnectTimeout = function () {\n  if (this._socket) {\n    this._socket.setTimeout(0);\n\n    this._socket.destroy();\n  }\n\n  var err = new Error('connect ETIMEDOUT');\n  err.errorno = 'ETIMEDOUT';\n  err.code = 'ETIMEDOUT';\n  err.syscall = 'connect';\n\n  this._handleNetworkError(err);\n};\n\nConnection.prototype._handleNetworkError = function (err) {\n  this._protocol.handleNetworkError(err);\n};\n\nConnection.prototype._handleProtocolError = function (err) {\n  this.state = 'protocol_error';\n  this.emit('error', err);\n};\n\nConnection.prototype._handleProtocolDrain = function () {\n  this.emit('drain');\n};\n\nConnection.prototype._handleProtocolConnect = function () {\n  this.state = 'connected';\n  this.emit('connect');\n};\n\nConnection.prototype._handleProtocolHandshake = function _handleProtocolHandshake() {\n  this.state = 'authenticated';\n};\n\nConnection.prototype._handleProtocolInitialize = function _handleProtocolInitialize(packet) {\n  this.threadId = packet.threadId;\n};\n\nConnection.prototype._handleProtocolEnd = function (err) {\n  this.state = 'disconnected';\n  this.emit('end', err);\n};\n\nConnection.prototype._handleProtocolEnqueue = function _handleProtocolEnqueue(sequence) {\n  this.emit('enqueue', sequence);\n};\n\nConnection.prototype._implyConnect = function () {\n  if (!this._connectCalled) {\n    this.connect();\n  }\n};\n\nfunction createSecureContext(config, cb) {\n  var context = null;\n  var error = null;\n\n  try {\n    context = tls.createSecureContext({\n      ca: config.ssl.ca,\n      cert: config.ssl.cert,\n      ciphers: config.ssl.ciphers,\n      key: config.ssl.key,\n      passphrase: config.ssl.passphrase\n    });\n  } catch (err) {\n    error = err;\n  }\n\n  cb(error, context);\n}\n\nfunction unwrapFromDomain(fn) {\n  return function () {\n    var domains = [];\n    var ret;\n\n    while (process.domain) {\n      domains.shift(process.domain);\n      process.domain.exit();\n    }\n\n    try {\n      ret = fn.apply(this, arguments);\n    } finally {\n      for (var i = 0; i < domains.length; i++) {\n        domains[i].enter();\n      }\n    }\n\n    return ret;\n  };\n}\n\nfunction wrapCallbackInDomain(ee, fn) {\n  if (typeof fn !== 'function' || fn.domain) {\n    return fn;\n  }\n\n  var domain = process.domain;\n\n  if (domain) {\n    return domain.bind(fn);\n  } else if (ee) {\n    return unwrapFromDomain(wrapToDomain(ee, fn));\n  } else {\n    return fn;\n  }\n}\n\nfunction wrapToDomain(ee, fn) {\n  return function () {\n    if (Events.usingDomains && ee.domain) {\n      ee.domain.enter();\n      fn.apply(this, arguments);\n      ee.domain.exit();\n    } else {\n      fn.apply(this, arguments);\n    }\n  };\n}","map":{"version":3,"sources":["/home/endurance21/tray/node_modules/mysql/lib/Connection.js"],"names":["Crypto","require","Events","Net","tls","ConnectionConfig","Protocol","SqlString","Query","Util","module","exports","Connection","inherits","EventEmitter","options","call","config","_socket","socket","_protocol","connection","_connectCalled","state","threadId","createQuery","sql","values","callback","cb","wrapCallbackInDomain","prop","undefined","TypeError","prototype","connect","socketPath","createConnection","port","host","usingDomains","domain","on","data","write","wrapToDomain","end","_handleNetworkError","bind","_handleProtocolConnect","_handleProtocolHandshake","_handleProtocolInitialize","_handleProtocolError","_handleProtocolDrain","_handleProtocolEnd","_handleProtocolEnqueue","connectTimeout","handleConnectTimeout","_handleConnectTimeout","setTimeout","once","handshake","changeUser","_implyConnect","charsetNumber","charset","getCharsetNumber","user","password","database","timeout","currentConfig","beginTransaction","query","commit","rollback","_connection","typeCast","format","_callback","_enqueue","ping","statistics","stats","opts","Object","create","quit","destroy","pause","resume","escape","value","timezone","escapeId","queryFormat","stringifyObjects","TLSSocket","_startTLS","onSecure","createSecureContext","err","secureContext","removeAllListeners","rejectUnauthorized","ssl","secureEstablished","secureSocket","requestCert","isServer","pipe","verifyError","_start","credentials","createCredentials","ca","cert","ciphers","key","passphrase","securePair","createSecurePair","encrypted","cleartext","Error","code","_cycle","cycle","error","apply","arguments","errorno","syscall","handleNetworkError","emit","packet","sequence","context","unwrapFromDomain","fn","domains","ret","process","shift","exit","i","length","enter","ee"],"mappings":"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","sourcesContent":["var Crypto           = require('crypto');\nvar Events           = require('events');\nvar Net              = require('net');\nvar tls              = require('tls');\nvar ConnectionConfig = require('./ConnectionConfig');\nvar Protocol         = require('./protocol/Protocol');\nvar SqlString        = require('./protocol/SqlString');\nvar Query            = require('./protocol/sequences/Query');\nvar Util             = require('util');\n\nmodule.exports = Connection;\nUtil.inherits(Connection, Events.EventEmitter);\nfunction Connection(options) {\n  Events.EventEmitter.call(this);\n\n  this.config = options.config;\n\n  this._socket        = options.socket;\n  this._protocol      = new Protocol({config: this.config, connection: this});\n  this._connectCalled = false;\n  this.state          = 'disconnected';\n  this.threadId       = null;\n}\n\nConnection.createQuery = function createQuery(sql, values, callback) {\n  if (sql instanceof Query) {\n    return sql;\n  }\n\n  var cb      = wrapCallbackInDomain(null, callback);\n  var options = {};\n\n  if (typeof sql === 'function') {\n    cb = wrapCallbackInDomain(null, sql);\n    return new Query(options, cb);\n  }\n\n  if (typeof sql === 'object') {\n    for (var prop in sql) {\n      options[prop] = sql[prop];\n    }\n\n    if (typeof values === 'function') {\n      cb = wrapCallbackInDomain(null, values);\n    } else if (values !== undefined) {\n      options.values = values;\n    }\n\n    return new Query(options, cb);\n  }\n\n  options.sql    = sql;\n  options.values = values;\n\n  if (typeof values === 'function') {\n    cb = wrapCallbackInDomain(null, values);\n    options.values = undefined;\n  }\n\n  if (cb === undefined && callback !== undefined) {\n    throw new TypeError('argument callback must be a function when provided');\n  }\n\n  return new Query(options, cb);\n};\n\nConnection.prototype.connect = function connect(options, callback) {\n  if (!callback && typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  if (!this._connectCalled) {\n    this._connectCalled = true;\n\n    // Connect either via a UNIX domain socket or a TCP socket.\n    this._socket = (this.config.socketPath)\n      ? Net.createConnection(this.config.socketPath)\n      : Net.createConnection(this.config.port, this.config.host);\n\n    // Connect socket to connection domain\n    if (Events.usingDomains) {\n      this._socket.domain = this.domain;\n    }\n\n    var connection = this;\n    this._protocol.on('data', function(data) {\n      connection._socket.write(data);\n    });\n    this._socket.on('data', wrapToDomain(connection, function (data) {\n      connection._protocol.write(data);\n    }));\n    this._protocol.on('end', function() {\n      connection._socket.end();\n    });\n    this._socket.on('end', wrapToDomain(connection, function () {\n      connection._protocol.end();\n    }));\n\n    this._socket.on('error', this._handleNetworkError.bind(this));\n    this._socket.on('connect', this._handleProtocolConnect.bind(this));\n    this._protocol.on('handshake', this._handleProtocolHandshake.bind(this));\n    this._protocol.on('initialize', this._handleProtocolInitialize.bind(this));\n    this._protocol.on('unhandledError', this._handleProtocolError.bind(this));\n    this._protocol.on('drain', this._handleProtocolDrain.bind(this));\n    this._protocol.on('end', this._handleProtocolEnd.bind(this));\n    this._protocol.on('enqueue', this._handleProtocolEnqueue.bind(this));\n\n    if (this.config.connectTimeout) {\n      var handleConnectTimeout = this._handleConnectTimeout.bind(this);\n\n      this._socket.setTimeout(this.config.connectTimeout, handleConnectTimeout);\n      this._socket.once('connect', function() {\n        this.setTimeout(0, handleConnectTimeout);\n      });\n    }\n  }\n\n  this._protocol.handshake(options, wrapCallbackInDomain(this, callback));\n};\n\nConnection.prototype.changeUser = function changeUser(options, callback) {\n  if (!callback && typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  this._implyConnect();\n\n  var charsetNumber = (options.charset)\n    ? ConnectionConfig.getCharsetNumber(options.charset)\n    : this.config.charsetNumber;\n\n  return this._protocol.changeUser({\n    user          : options.user || this.config.user,\n    password      : options.password || this.config.password,\n    database      : options.database || this.config.database,\n    timeout       : options.timeout,\n    charsetNumber : charsetNumber,\n    currentConfig : this.config\n  }, wrapCallbackInDomain(this, callback));\n};\n\nConnection.prototype.beginTransaction = function beginTransaction(options, callback) {\n  if (!callback && typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  options = options || {};\n  options.sql = 'START TRANSACTION';\n  options.values = null;\n\n  return this.query(options, callback);\n};\n\nConnection.prototype.commit = function commit(options, callback) {\n  if (!callback && typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  options = options || {};\n  options.sql = 'COMMIT';\n  options.values = null;\n\n  return this.query(options, callback);\n};\n\nConnection.prototype.rollback = function rollback(options, callback) {\n  if (!callback && typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  options = options || {};\n  options.sql = 'ROLLBACK';\n  options.values = null;\n\n  return this.query(options, callback);\n};\n\nConnection.prototype.query = function query(sql, values, cb) {\n  var query = Connection.createQuery(sql, values, cb);\n  query._connection = this;\n\n  if (!(typeof sql === 'object' && 'typeCast' in sql)) {\n    query.typeCast = this.config.typeCast;\n  }\n\n  if (query.sql) {\n    query.sql = this.format(query.sql, query.values);\n  }\n\n  if (query._callback) {\n    query._callback = wrapCallbackInDomain(this, query._callback);\n  }\n\n  this._implyConnect();\n\n  return this._protocol._enqueue(query);\n};\n\nConnection.prototype.ping = function ping(options, callback) {\n  if (!callback && typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  this._implyConnect();\n  this._protocol.ping(options, wrapCallbackInDomain(this, callback));\n};\n\nConnection.prototype.statistics = function statistics(options, callback) {\n  if (!callback && typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  this._implyConnect();\n  this._protocol.stats(options, wrapCallbackInDomain(this, callback));\n};\n\nConnection.prototype.end = function end(options, callback) {\n  var cb   = callback;\n  var opts = options;\n\n  if (!callback && typeof options === 'function') {\n    cb   = options;\n    opts = null;\n  }\n\n  // create custom options reference\n  opts = Object.create(opts || null);\n\n  if (opts.timeout === undefined) {\n    // default timeout of 30 seconds\n    opts.timeout = 30000;\n  }\n\n  this._implyConnect();\n  this._protocol.quit(opts, wrapCallbackInDomain(this, cb));\n};\n\nConnection.prototype.destroy = function() {\n  this.state = 'disconnected';\n  this._implyConnect();\n  this._socket.destroy();\n  this._protocol.destroy();\n};\n\nConnection.prototype.pause = function() {\n  this._socket.pause();\n  this._protocol.pause();\n};\n\nConnection.prototype.resume = function() {\n  this._socket.resume();\n  this._protocol.resume();\n};\n\nConnection.prototype.escape = function(value) {\n  return SqlString.escape(value, false, this.config.timezone);\n};\n\nConnection.prototype.escapeId = function escapeId(value) {\n  return SqlString.escapeId(value, false);\n};\n\nConnection.prototype.format = function(sql, values) {\n  if (typeof this.config.queryFormat === 'function') {\n    return this.config.queryFormat.call(this, sql, values, this.config.timezone);\n  }\n  return SqlString.format(sql, values, this.config.stringifyObjects, this.config.timezone);\n};\n\nif (tls.TLSSocket) {\n  // 0.11+ environment\n  Connection.prototype._startTLS = function _startTLS(onSecure) {\n    var connection = this;\n\n    createSecureContext(this.config, function (err, secureContext) {\n      if (err) {\n        onSecure(err);\n        return;\n      }\n\n      // \"unpipe\"\n      connection._socket.removeAllListeners('data');\n      connection._protocol.removeAllListeners('data');\n\n      // socket <-> encrypted\n      var rejectUnauthorized = connection.config.ssl.rejectUnauthorized;\n      var secureEstablished  = false;\n      var secureSocket       = new tls.TLSSocket(connection._socket, {\n        rejectUnauthorized : rejectUnauthorized,\n        requestCert        : true,\n        secureContext      : secureContext,\n        isServer           : false\n      });\n\n      // error handler for secure socket\n      secureSocket.on('_tlsError', function(err) {\n        if (secureEstablished) {\n          connection._handleNetworkError(err);\n        } else {\n          onSecure(err);\n        }\n      });\n\n      // cleartext <-> protocol\n      secureSocket.pipe(connection._protocol);\n      connection._protocol.on('data', function(data) {\n        secureSocket.write(data);\n      });\n\n      secureSocket.on('secure', function() {\n        secureEstablished = true;\n\n        onSecure(rejectUnauthorized ? this.ssl.verifyError() : null);\n      });\n\n      // start TLS communications\n      secureSocket._start();\n    });\n  };\n} else {\n  // pre-0.11 environment\n  Connection.prototype._startTLS = function _startTLS(onSecure) {\n    // before TLS:\n    //  _socket <-> _protocol\n    // after:\n    //  _socket <-> securePair.encrypted <-> securePair.cleartext <-> _protocol\n\n    var connection  = this;\n    var credentials = Crypto.createCredentials({\n      ca         : this.config.ssl.ca,\n      cert       : this.config.ssl.cert,\n      ciphers    : this.config.ssl.ciphers,\n      key        : this.config.ssl.key,\n      passphrase : this.config.ssl.passphrase\n    });\n\n    var rejectUnauthorized = this.config.ssl.rejectUnauthorized;\n    var secureEstablished  = false;\n    var securePair         = tls.createSecurePair(credentials, false, true, rejectUnauthorized);\n\n    // error handler for secure pair\n    securePair.on('error', function(err) {\n      if (secureEstablished) {\n        connection._handleNetworkError(err);\n      } else {\n        onSecure(err);\n      }\n    });\n\n    // \"unpipe\"\n    this._socket.removeAllListeners('data');\n    this._protocol.removeAllListeners('data');\n\n    // socket <-> encrypted\n    securePair.encrypted.pipe(this._socket);\n    this._socket.on('data', function(data) {\n      securePair.encrypted.write(data);\n    });\n\n    // cleartext <-> protocol\n    securePair.cleartext.pipe(this._protocol);\n    this._protocol.on('data', function(data) {\n      securePair.cleartext.write(data);\n    });\n\n    // secure established\n    securePair.on('secure', function() {\n      secureEstablished = true;\n\n      if (!rejectUnauthorized) {\n        onSecure();\n        return;\n      }\n\n      var verifyError = this.ssl.verifyError();\n      var err = verifyError;\n\n      // node.js 0.6 support\n      if (typeof err === 'string') {\n        err = new Error(verifyError);\n        err.code = verifyError;\n      }\n\n      onSecure(err);\n    });\n\n    // node.js 0.8 bug\n    securePair._cycle = securePair.cycle;\n    securePair.cycle  = function cycle() {\n      if (this.ssl && this.ssl.error) {\n        this.error();\n      }\n\n      return this._cycle.apply(this, arguments);\n    };\n  };\n}\n\nConnection.prototype._handleConnectTimeout = function() {\n  if (this._socket) {\n    this._socket.setTimeout(0);\n    this._socket.destroy();\n  }\n\n  var err = new Error('connect ETIMEDOUT');\n  err.errorno = 'ETIMEDOUT';\n  err.code = 'ETIMEDOUT';\n  err.syscall = 'connect';\n\n  this._handleNetworkError(err);\n};\n\nConnection.prototype._handleNetworkError = function(err) {\n  this._protocol.handleNetworkError(err);\n};\n\nConnection.prototype._handleProtocolError = function(err) {\n  this.state = 'protocol_error';\n  this.emit('error', err);\n};\n\nConnection.prototype._handleProtocolDrain = function() {\n  this.emit('drain');\n};\n\nConnection.prototype._handleProtocolConnect = function() {\n  this.state = 'connected';\n  this.emit('connect');\n};\n\nConnection.prototype._handleProtocolHandshake = function _handleProtocolHandshake() {\n  this.state = 'authenticated';\n};\n\nConnection.prototype._handleProtocolInitialize = function _handleProtocolInitialize(packet) {\n  this.threadId = packet.threadId;\n};\n\nConnection.prototype._handleProtocolEnd = function(err) {\n  this.state = 'disconnected';\n  this.emit('end', err);\n};\n\nConnection.prototype._handleProtocolEnqueue = function _handleProtocolEnqueue(sequence) {\n  this.emit('enqueue', sequence);\n};\n\nConnection.prototype._implyConnect = function() {\n  if (!this._connectCalled) {\n    this.connect();\n  }\n};\n\nfunction createSecureContext (config, cb) {\n  var context = null;\n  var error   = null;\n\n  try {\n    context = tls.createSecureContext({\n      ca         : config.ssl.ca,\n      cert       : config.ssl.cert,\n      ciphers    : config.ssl.ciphers,\n      key        : config.ssl.key,\n      passphrase : config.ssl.passphrase\n    });\n  } catch (err) {\n    error = err;\n  }\n\n  cb(error, context);\n}\n\nfunction unwrapFromDomain(fn) {\n  return function () {\n    var domains = [];\n    var ret;\n\n    while (process.domain) {\n      domains.shift(process.domain);\n      process.domain.exit();\n    }\n\n    try {\n      ret = fn.apply(this, arguments);\n    } finally {\n      for (var i = 0; i < domains.length; i++) {\n        domains[i].enter();\n      }\n    }\n\n    return ret;\n  };\n}\n\nfunction wrapCallbackInDomain(ee, fn) {\n  if (typeof fn !== 'function' || fn.domain) {\n    return fn;\n  }\n\n  var domain = process.domain;\n\n  if (domain) {\n    return domain.bind(fn);\n  } else if (ee) {\n    return unwrapFromDomain(wrapToDomain(ee, fn));\n  } else {\n    return fn;\n  }\n}\n\nfunction wrapToDomain(ee, fn) {\n  return function () {\n    if (Events.usingDomains && ee.domain) {\n      ee.domain.enter();\n      fn.apply(this, arguments);\n      ee.domain.exit();\n    } else {\n      fn.apply(this, arguments);\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"script"}